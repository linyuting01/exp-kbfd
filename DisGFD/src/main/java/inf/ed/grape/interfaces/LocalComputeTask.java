package inf.ed.grape.interfaces;



import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import inf.ed.gfd.structure.Partition;
import inf.ed.gfd.structure.SuppResult;


public abstract class LocalComputeTask {

	/** assign a partition to this task */
	private int partitionID;

	/** step count */
	private int superstep;

	/** messages generated by this step */
	protected List<Message<?>> generatedMessages;

	/** results generated by this step */
	protected Result generatedResult;

	static Logger log = LogManager.getLogger(LocalComputeTask.class);

	public void init(int partitionID) {
		this.partitionID = partitionID;
		this.superstep = 0;
		this.generatedMessages = new ArrayList<Message<?>>();
		try {
			this.generatedResult = new SuppResult();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void prepareForNextCompute() {
		/** Clear messages. for the next compute. */

		log.info("clear message");
		this.generatedMessages.clear();
		this.superstep++;
	}

	public int getPartitionID() {
		return this.partitionID;
	}

	public int getSuperstep() {
		return this.superstep;
	}

	public List<Message<?>> getMessages() {
		/**
		 * return the messages generated by this local compute.
		 */
		return this.generatedMessages;
	}

	public Result getPartialResult() {
		/**
		 * return the results generated by this local compute.
		 */
		return this.generatedResult;
	}

	public abstract void compute(Partition partition);

	public abstract void incrementalCompute(Partition partition, List<Message<?>> incomingMessages);

	public abstract void prepareResult(Partition partition);
}
